from app.main import app
from fastapi.testclient import TestClient
from app.v2.settings import BaseSettings


def test_update():
    request_data = {"path": "TEST",
                    "object_name": "test",
                    "object_type": "jpg",
                    "base64_data": ""}

    with TestClient(app) as client:
        response = client.post("/v2/", json=request_data)

    assert response.status_code == 200
    assert response.json()["status"] == "ok"
    assert response.json()["result"] == {"url": f"https://{BaseSettings.bucket}.{BaseSettings.region_name}.digitaloceanspaces.com/TEST/test.jpg"}


def test_delete():
    request_data = {
        "url": f"https://{BaseSettings.bucket}.{BaseSettings.region_name}.digitaloceanspaces.com/TEST/test.jpg"
    }
    with TestClient(app) as client:
        response = client.delete("/v2/", json=request_data)

    assert response.status_code == 200
    assert response.json()["status"] == "ok"
    assert response.json()["result"] == f"TEST/test.jpg has been deleted"
